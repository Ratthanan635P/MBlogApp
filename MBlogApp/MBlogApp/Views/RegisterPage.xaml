<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewmodel="clr-namespace:MBlogApp.ViewModels"
             xmlns:local="clr-namespace:MBlogApp.Converters"
             xmlns:forms="clr-namespace:Lottie.Forms;assembly=Lottie.Forms"
             mc:Ignorable="d"
             x:Class="MBlogApp.Views.RegisterPage"
             NavigationPage.HasNavigationBar="False">
    <ContentPage.Resources>
        <ResourceDictionary>
            <local:EmailTriggerConverter x:Key="dataHasBeenEntered" />
            <local:PasswordTriggerConverter x:Key="dataHasPassword" />
            <local:ErrorTriggerConverter x:Key="dataHasError" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.BindingContext>
        <viewmodel:RegisterPageViewModel/>
    </ContentPage.BindingContext>
    <ContentPage.Content>
        <ScrollView>
            <Grid>
            <StackLayout>
                <StackLayout HeightRequest="50"
                    />
                <Image x:Name="Img_Logo" Source="logo_trans.png" 
                   VerticalOptions="CenterAndExpand" 
                   HorizontalOptions="CenterAndExpand"
                       HeightRequest="120"
                       WidthRequest="120"
                   />
                <Label  
                     x:Name="LbErrorMessage"
                     TextColor="{StaticResource P_RedColor}"
                    FontAttributes="None" 
                    FontSize="Small"
                     Margin="40,0"
                     Text="{Binding ErrorMessage}"
                     IsVisible="{Binding Source={x:Reference LbErrorMessage},
                                    Path=Text,
                                    Converter={StaticResource dataHasError}}"/>
                <Frame x:Name="fEmail">
                    <StackLayout Orientation="Vertical">
                        <Label Text="EMAIL"
                            Margin="10,0"/>
                        <Entry  
                             x:Name="EntryEmail"
                             IsPassword="False"
                             Margin="10,0"
                             Text="{Binding Email}"
                             ReturnType="Next"
                            TextColor="{StaticResource P_EntryTextColor}"
                            Focused="EntryEmail_Focused"
                            Unfocused="EntryEmail_Unfocused"/>
                    </StackLayout>
                </Frame>
                <Label Text="ErrorPasswordMessage" 
                   TextColor="Red"
                    Margin="40,0"
                   IsVisible="False"/>
                    <Frame x:Name="fPassword">
                    <StackLayout Orientation="Vertical" Spacing="0">
                        <Label Text="PASSWORD" 
                           Margin="10,0"/>
                        <Entry 
                             x:Name="EntryPassword"
                             IsPassword="True"
                             Margin="10,0"
                            Text="{Binding Password}" 
                                ReturnType="Next"
                            TextColor="{StaticResource P_EntryTextColor}"
                            Focused="EntryPassword_Focused"
                            Unfocused="EntryPassword_Unfocused"/>
                    </StackLayout>
                </Frame>
                <Label Text="ErrorConfirmPasswordMessage" 
                   TextColor="Red"
                    Margin="40,0"
                   IsVisible="False"/>
                    <Frame x:Name="fConfirm">
                    <StackLayout Orientation="Vertical" Spacing="0">
                        <Label Text="CONFIRM PASSWORD" 
                           Margin="10,0"/>
                        <Entry  
                             x:Name="EntryConfirmPassword"
                            IsPassword="True"
                             Margin="10,0"
                             Text="{Binding ConfirmPassword}" 
                            TextColor="{StaticResource P_EntryTextColor}"
                                ReturnType="Done"
                            Focused="EntryConfirmPassword_Focused"
                            Unfocused="EntryConfirmPassword_Unfocused"/>
                    </StackLayout>
                </Frame>
                <Button Text="REGISTER" 
                    HeightRequest="65"
                    Margin="40,20,40,5"
                        IsEnabled="False"
                        Command="{Binding RegisterCommand}"
                    >
                    <Button.Triggers>
                        <MultiTrigger TargetType="Button">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding Source={x:Reference EntryEmail},
                              Path=Text,
                              Converter={StaticResource dataHasBeenEntered}}"
                          Value="true" />
                                <BindingCondition Binding="{Binding Source={x:Reference EntryPassword},
                              Path=Text.Length,
                              Converter={StaticResource dataHasPassword}}"
                          Value="true" />
                                <BindingCondition Binding="{Binding Source={x:Reference EntryConfirmPassword},
                              Path=Text.Length,
                              Converter={StaticResource dataHasPassword}}"
                          Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True" />
                            <Setter Property="BackgroundColor" Value="{StaticResource P_PimaryMainColor}"/>
                        </MultiTrigger>
                    </Button.Triggers>
                </Button>

                <Label Text="LOG IN"                  
                    HorizontalOptions="CenterAndExpand"
                    VerticalOptions="EndAndExpand"
                   FontAttributes="None"
                   FontSize="Medium"
                       Margin="0,15">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding BackPageCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
            </StackLayout>
                <StackLayout BackgroundColor="LightGray" Opacity="0.8" IsVisible="{Binding Loading}">
                <forms:AnimationView 
	                    x:Name="animationView" 
	                    Animation="loadingdot2.json" 
	                    Loop="True"
	                    AutoPlay="True"
	                    VerticalOptions="CenterAndExpand" 
	                    HorizontalOptions="CenterAndExpand" />
            </StackLayout>
            </Grid>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>